<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chilicool.hdtools.dao.DepartmentMapper" >
  <resultMap id="BaseResultMap" type="com.chilicool.hdtools.domain.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="PROJ_ID" property="projId" jdbcType="BIGINT" />
    <result column="DEPT_TYPE_ID" property="deptTypeId" jdbcType="BIGINT" />
    <result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR" />
    <result column="DEPT_CODE" property="deptCode" jdbcType="VARCHAR" />
    <result column="NAME_SPELLING" property="nameSpelling" jdbcType="VARCHAR" />
    <result column="NAME_CODE" property="nameCode" jdbcType="VARCHAR" />
    <result column="ORDER_IDX" property="orderIdx" jdbcType="SMALLINT" />
    <result column="ORDER_NAME" property="orderName" jdbcType="VARCHAR" />
    <result column="PLAN_AREA" property="planArea" jdbcType="DOUBLE" />
    <result column="DESIGN_AREA" property="designArea" jdbcType="DOUBLE" />
    <result column="PLAN_AREA_PERSENT" property="planAreaPersent" jdbcType="DOUBLE" />
    <result column="DESIGN_AREA_PERSENT" property="designAreaPersent" jdbcType="DOUBLE" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="NOTE" property="note" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="DeptTypeModelMap" type="com.chilicool.hdtools.model.PlanAreaModel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="ID" property="id" jdbcType="BIGINT" />
    <result column="PLAN_AREA" property="planArea" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, PROJ_ID, DEPT_TYPE_ID, DEPT_NAME, DEPT_CODE, NAME_SPELLING, NAME_CODE, ORDER_IDX, 
    ORDER_NAME, PLAN_AREA, DESIGN_AREA, PLAN_AREA_PERSENT, DESIGN_AREA_PERSENT, CREATE_TIME, 
    UPDATE_TIME, NOTE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chilicool.hdtools.domain.DepartmentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from department
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from department
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chilicool.hdtools.domain.DepartmentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chilicool.hdtools.domain.Department"  useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into department (PROJ_ID, DEPT_TYPE_ID,
      DEPT_NAME, DEPT_CODE, NAME_SPELLING, 
      NAME_CODE, ORDER_IDX, ORDER_NAME, 
      PLAN_AREA, DESIGN_AREA, PLAN_AREA_PERSENT, 
      DESIGN_AREA_PERSENT, CREATE_TIME, UPDATE_TIME, 
      NOTE)
    values (#{projId,jdbcType=BIGINT}, #{deptTypeId,jdbcType=BIGINT},
      #{deptName,jdbcType=VARCHAR}, #{deptCode,jdbcType=VARCHAR}, #{nameSpelling,jdbcType=VARCHAR}, 
      #{nameCode,jdbcType=VARCHAR}, #{orderIdx,jdbcType=SMALLINT}, #{orderName,jdbcType=VARCHAR}, 
      #{planArea,jdbcType=DOUBLE}, #{designArea,jdbcType=DOUBLE}, #{planAreaPersent,jdbcType=DOUBLE}, 
      #{designAreaPersent,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chilicool.hdtools.domain.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="projId != null" >
        PROJ_ID,
      </if>
      <if test="deptTypeId != null" >
        DEPT_TYPE_ID,
      </if>
      <if test="deptName != null" >
        DEPT_NAME,
      </if>
      <if test="deptCode != null" >
        DEPT_CODE,
      </if>
      <if test="nameSpelling != null" >
        NAME_SPELLING,
      </if>
      <if test="nameCode != null" >
        NAME_CODE,
      </if>
      <if test="orderIdx != null" >
        ORDER_IDX,
      </if>
      <if test="orderName != null" >
        ORDER_NAME,
      </if>
      <if test="planArea != null" >
        PLAN_AREA,
      </if>
      <if test="designArea != null" >
        DESIGN_AREA,
      </if>
      <if test="planAreaPersent != null" >
        PLAN_AREA_PERSENT,
      </if>
      <if test="designAreaPersent != null" >
        DESIGN_AREA_PERSENT,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="note != null" >
        NOTE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="projId != null" >
        #{projId,jdbcType=BIGINT},
      </if>
      <if test="deptTypeId != null" >
        #{deptTypeId,jdbcType=BIGINT},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="nameSpelling != null" >
        #{nameSpelling,jdbcType=VARCHAR},
      </if>
      <if test="nameCode != null" >
        #{nameCode,jdbcType=VARCHAR},
      </if>
      <if test="orderIdx != null" >
        #{orderIdx,jdbcType=SMALLINT},
      </if>
      <if test="orderName != null" >
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="planArea != null" >
        #{planArea,jdbcType=DOUBLE},
      </if>
      <if test="designArea != null" >
        #{designArea,jdbcType=DOUBLE},
      </if>
      <if test="planAreaPersent != null" >
        #{planAreaPersent,jdbcType=DOUBLE},
      </if>
      <if test="designAreaPersent != null" >
        #{designAreaPersent,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chilicool.hdtools.domain.DepartmentExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from department
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.projId != null" >
        PROJ_ID = #{record.projId,jdbcType=BIGINT},
      </if>
      <if test="record.deptTypeId != null" >
        DEPT_TYPE_ID = #{record.deptTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.deptName != null" >
        DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptCode != null" >
        DEPT_CODE = #{record.deptCode,jdbcType=VARCHAR},
      </if>
      <if test="record.nameSpelling != null" >
        NAME_SPELLING = #{record.nameSpelling,jdbcType=VARCHAR},
      </if>
      <if test="record.nameCode != null" >
        NAME_CODE = #{record.nameCode,jdbcType=VARCHAR},
      </if>
      <if test="record.orderIdx != null" >
        ORDER_IDX = #{record.orderIdx,jdbcType=SMALLINT},
      </if>
      <if test="record.orderName != null" >
        ORDER_NAME = #{record.orderName,jdbcType=VARCHAR},
      </if>
      <if test="record.planArea != null" >
        PLAN_AREA = #{record.planArea,jdbcType=DOUBLE},
      </if>
      <if test="record.designArea != null" >
        DESIGN_AREA = #{record.designArea,jdbcType=DOUBLE},
      </if>
      <if test="record.planAreaPersent != null" >
        PLAN_AREA_PERSENT = #{record.planAreaPersent,jdbcType=DOUBLE},
      </if>
      <if test="record.designAreaPersent != null" >
        DESIGN_AREA_PERSENT = #{record.designAreaPersent,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null" >
        NOTE = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    set ID = #{record.id,jdbcType=BIGINT},
      PROJ_ID = #{record.projId,jdbcType=BIGINT},
      DEPT_TYPE_ID = #{record.deptTypeId,jdbcType=BIGINT},
      DEPT_NAME = #{record.deptName,jdbcType=VARCHAR},
      DEPT_CODE = #{record.deptCode,jdbcType=VARCHAR},
      NAME_SPELLING = #{record.nameSpelling,jdbcType=VARCHAR},
      NAME_CODE = #{record.nameCode,jdbcType=VARCHAR},
      ORDER_IDX = #{record.orderIdx,jdbcType=SMALLINT},
      ORDER_NAME = #{record.orderName,jdbcType=VARCHAR},
      PLAN_AREA = #{record.planArea,jdbcType=DOUBLE},
      DESIGN_AREA = #{record.designArea,jdbcType=DOUBLE},
      PLAN_AREA_PERSENT = #{record.planAreaPersent,jdbcType=DOUBLE},
      DESIGN_AREA_PERSENT = #{record.designAreaPersent,jdbcType=DOUBLE},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      NOTE = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chilicool.hdtools.domain.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    <set >
      <if test="projId != null" >
        PROJ_ID = #{projId,jdbcType=BIGINT},
      </if>
      <if test="deptTypeId != null" >
        DEPT_TYPE_ID = #{deptTypeId,jdbcType=BIGINT},
      </if>
      <if test="deptName != null" >
        DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="nameSpelling != null" >
        NAME_SPELLING = #{nameSpelling,jdbcType=VARCHAR},
      </if>
      <if test="nameCode != null" >
        NAME_CODE = #{nameCode,jdbcType=VARCHAR},
      </if>
      <if test="orderIdx != null" >
        ORDER_IDX = #{orderIdx,jdbcType=SMALLINT},
      </if>
      <if test="orderName != null" >
        ORDER_NAME = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="planArea != null" >
        PLAN_AREA = #{planArea,jdbcType=DOUBLE},
      </if>
      <if test="designArea != null" >
        DESIGN_AREA = #{designArea,jdbcType=DOUBLE},
      </if>
      <if test="planAreaPersent != null" >
        PLAN_AREA_PERSENT = #{planAreaPersent,jdbcType=DOUBLE},
      </if>
      <if test="designAreaPersent != null" >
        DESIGN_AREA_PERSENT = #{designAreaPersent,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        NOTE = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chilicool.hdtools.domain.Department" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update department
    set PROJ_ID = #{projId,jdbcType=BIGINT},
      DEPT_TYPE_ID = #{deptTypeId,jdbcType=BIGINT},
      DEPT_NAME = #{deptName,jdbcType=VARCHAR},
      DEPT_CODE = #{deptCode,jdbcType=VARCHAR},
      NAME_SPELLING = #{nameSpelling,jdbcType=VARCHAR},
      NAME_CODE = #{nameCode,jdbcType=VARCHAR},
      ORDER_IDX = #{orderIdx,jdbcType=SMALLINT},
      ORDER_NAME = #{orderName,jdbcType=VARCHAR},
      PLAN_AREA = #{planArea,jdbcType=DOUBLE},
      DESIGN_AREA = #{designArea,jdbcType=DOUBLE},
      PLAN_AREA_PERSENT = #{planAreaPersent,jdbcType=DOUBLE},
      DESIGN_AREA_PERSENT = #{designAreaPersent,jdbcType=DOUBLE},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      NOTE = #{note,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <select id="loadAllDeptInfoModel" resultMap="DeptTypeModelMap" parameterType="Long">
    select ID,
    PLAN_AREA
    from department
    where dept_type_id = #{deptTypeId,jdbcType=BIGINT}
    order by ID, order_idx
  </select>

  <select id="loadAllDeptDesignAreaInfoModel" resultMap="DeptTypeModelMap" parameterType="Long">
    select ID,
        DESIGN_AREA AS PLAN_AREA
    from department
    where dept_type_id = #{deptTypeId,jdbcType=BIGINT}
    order by ID, order_idx
  </select>
</mapper>