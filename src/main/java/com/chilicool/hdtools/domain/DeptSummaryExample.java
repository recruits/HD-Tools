package com.chilicool.hdtools.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DeptSummaryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public DeptSummaryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProjIdIsNull() {
            addCriterion("PROJ_ID is null");
            return (Criteria) this;
        }

        public Criteria andProjIdIsNotNull() {
            addCriterion("PROJ_ID is not null");
            return (Criteria) this;
        }

        public Criteria andProjIdEqualTo(Long value) {
            addCriterion("PROJ_ID =", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdNotEqualTo(Long value) {
            addCriterion("PROJ_ID <>", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdGreaterThan(Long value) {
            addCriterion("PROJ_ID >", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdGreaterThanOrEqualTo(Long value) {
            addCriterion("PROJ_ID >=", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdLessThan(Long value) {
            addCriterion("PROJ_ID <", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdLessThanOrEqualTo(Long value) {
            addCriterion("PROJ_ID <=", value, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdIn(List<Long> values) {
            addCriterion("PROJ_ID in", values, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdNotIn(List<Long> values) {
            addCriterion("PROJ_ID not in", values, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdBetween(Long value1, Long value2) {
            addCriterion("PROJ_ID between", value1, value2, "projId");
            return (Criteria) this;
        }

        public Criteria andProjIdNotBetween(Long value1, Long value2) {
            addCriterion("PROJ_ID not between", value1, value2, "projId");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalIsNull() {
            addCriterion("PLAN_AREA_TOTAL is null");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalIsNotNull() {
            addCriterion("PLAN_AREA_TOTAL is not null");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalEqualTo(Double value) {
            addCriterion("PLAN_AREA_TOTAL =", value, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalNotEqualTo(Double value) {
            addCriterion("PLAN_AREA_TOTAL <>", value, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalGreaterThan(Double value) {
            addCriterion("PLAN_AREA_TOTAL >", value, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("PLAN_AREA_TOTAL >=", value, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalLessThan(Double value) {
            addCriterion("PLAN_AREA_TOTAL <", value, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalLessThanOrEqualTo(Double value) {
            addCriterion("PLAN_AREA_TOTAL <=", value, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalIn(List<Double> values) {
            addCriterion("PLAN_AREA_TOTAL in", values, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalNotIn(List<Double> values) {
            addCriterion("PLAN_AREA_TOTAL not in", values, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalBetween(Double value1, Double value2) {
            addCriterion("PLAN_AREA_TOTAL between", value1, value2, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaTotalNotBetween(Double value1, Double value2) {
            addCriterion("PLAN_AREA_TOTAL not between", value1, value2, "planAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalIsNull() {
            addCriterion("DESIGN_AREA_TOTAL is null");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalIsNotNull() {
            addCriterion("DESIGN_AREA_TOTAL is not null");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalEqualTo(Double value) {
            addCriterion("DESIGN_AREA_TOTAL =", value, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalNotEqualTo(Double value) {
            addCriterion("DESIGN_AREA_TOTAL <>", value, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalGreaterThan(Double value) {
            addCriterion("DESIGN_AREA_TOTAL >", value, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalGreaterThanOrEqualTo(Double value) {
            addCriterion("DESIGN_AREA_TOTAL >=", value, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalLessThan(Double value) {
            addCriterion("DESIGN_AREA_TOTAL <", value, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalLessThanOrEqualTo(Double value) {
            addCriterion("DESIGN_AREA_TOTAL <=", value, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalIn(List<Double> values) {
            addCriterion("DESIGN_AREA_TOTAL in", values, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalNotIn(List<Double> values) {
            addCriterion("DESIGN_AREA_TOTAL not in", values, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalBetween(Double value1, Double value2) {
            addCriterion("DESIGN_AREA_TOTAL between", value1, value2, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andDesignAreaTotalNotBetween(Double value1, Double value2) {
            addCriterion("DESIGN_AREA_TOTAL not between", value1, value2, "designAreaTotal");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentIsNull() {
            addCriterion("PLAN_AREA_PERSENT is null");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentIsNotNull() {
            addCriterion("PLAN_AREA_PERSENT is not null");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentEqualTo(Double value) {
            addCriterion("PLAN_AREA_PERSENT =", value, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentNotEqualTo(Double value) {
            addCriterion("PLAN_AREA_PERSENT <>", value, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentGreaterThan(Double value) {
            addCriterion("PLAN_AREA_PERSENT >", value, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentGreaterThanOrEqualTo(Double value) {
            addCriterion("PLAN_AREA_PERSENT >=", value, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentLessThan(Double value) {
            addCriterion("PLAN_AREA_PERSENT <", value, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentLessThanOrEqualTo(Double value) {
            addCriterion("PLAN_AREA_PERSENT <=", value, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentIn(List<Double> values) {
            addCriterion("PLAN_AREA_PERSENT in", values, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentNotIn(List<Double> values) {
            addCriterion("PLAN_AREA_PERSENT not in", values, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentBetween(Double value1, Double value2) {
            addCriterion("PLAN_AREA_PERSENT between", value1, value2, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaPersentNotBetween(Double value1, Double value2) {
            addCriterion("PLAN_AREA_PERSENT not between", value1, value2, "planAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentIsNull() {
            addCriterion("DESIGN_AREA_PERSENT is null");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentIsNotNull() {
            addCriterion("DESIGN_AREA_PERSENT is not null");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentEqualTo(Double value) {
            addCriterion("DESIGN_AREA_PERSENT =", value, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentNotEqualTo(Double value) {
            addCriterion("DESIGN_AREA_PERSENT <>", value, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentGreaterThan(Double value) {
            addCriterion("DESIGN_AREA_PERSENT >", value, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentGreaterThanOrEqualTo(Double value) {
            addCriterion("DESIGN_AREA_PERSENT >=", value, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentLessThan(Double value) {
            addCriterion("DESIGN_AREA_PERSENT <", value, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentLessThanOrEqualTo(Double value) {
            addCriterion("DESIGN_AREA_PERSENT <=", value, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentIn(List<Double> values) {
            addCriterion("DESIGN_AREA_PERSENT in", values, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentNotIn(List<Double> values) {
            addCriterion("DESIGN_AREA_PERSENT not in", values, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentBetween(Double value1, Double value2) {
            addCriterion("DESIGN_AREA_PERSENT between", value1, value2, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andDesignAreaPersentNotBetween(Double value1, Double value2) {
            addCriterion("DESIGN_AREA_PERSENT not between", value1, value2, "designAreaPersent");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioIsNull() {
            addCriterion("PLAN_AREA_RATIO is null");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioIsNotNull() {
            addCriterion("PLAN_AREA_RATIO is not null");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioEqualTo(Double value) {
            addCriterion("PLAN_AREA_RATIO =", value, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioNotEqualTo(Double value) {
            addCriterion("PLAN_AREA_RATIO <>", value, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioGreaterThan(Double value) {
            addCriterion("PLAN_AREA_RATIO >", value, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioGreaterThanOrEqualTo(Double value) {
            addCriterion("PLAN_AREA_RATIO >=", value, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioLessThan(Double value) {
            addCriterion("PLAN_AREA_RATIO <", value, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioLessThanOrEqualTo(Double value) {
            addCriterion("PLAN_AREA_RATIO <=", value, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioIn(List<Double> values) {
            addCriterion("PLAN_AREA_RATIO in", values, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioNotIn(List<Double> values) {
            addCriterion("PLAN_AREA_RATIO not in", values, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioBetween(Double value1, Double value2) {
            addCriterion("PLAN_AREA_RATIO between", value1, value2, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaRatioNotBetween(Double value1, Double value2) {
            addCriterion("PLAN_AREA_RATIO not between", value1, value2, "planAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioIsNull() {
            addCriterion("DESIGN_AREA_RATIO is null");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioIsNotNull() {
            addCriterion("DESIGN_AREA_RATIO is not null");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioEqualTo(Double value) {
            addCriterion("DESIGN_AREA_RATIO =", value, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioNotEqualTo(Double value) {
            addCriterion("DESIGN_AREA_RATIO <>", value, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioGreaterThan(Double value) {
            addCriterion("DESIGN_AREA_RATIO >", value, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioGreaterThanOrEqualTo(Double value) {
            addCriterion("DESIGN_AREA_RATIO >=", value, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioLessThan(Double value) {
            addCriterion("DESIGN_AREA_RATIO <", value, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioLessThanOrEqualTo(Double value) {
            addCriterion("DESIGN_AREA_RATIO <=", value, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioIn(List<Double> values) {
            addCriterion("DESIGN_AREA_RATIO in", values, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioNotIn(List<Double> values) {
            addCriterion("DESIGN_AREA_RATIO not in", values, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioBetween(Double value1, Double value2) {
            addCriterion("DESIGN_AREA_RATIO between", value1, value2, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andDesignAreaRatioNotBetween(Double value1, Double value2) {
            addCriterion("DESIGN_AREA_RATIO not between", value1, value2, "designAreaRatio");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryIsNull() {
            addCriterion("PLAN_AREA_SUMMARY is null");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryIsNotNull() {
            addCriterion("PLAN_AREA_SUMMARY is not null");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryEqualTo(Double value) {
            addCriterion("PLAN_AREA_SUMMARY =", value, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryNotEqualTo(Double value) {
            addCriterion("PLAN_AREA_SUMMARY <>", value, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryGreaterThan(Double value) {
            addCriterion("PLAN_AREA_SUMMARY >", value, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryGreaterThanOrEqualTo(Double value) {
            addCriterion("PLAN_AREA_SUMMARY >=", value, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryLessThan(Double value) {
            addCriterion("PLAN_AREA_SUMMARY <", value, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryLessThanOrEqualTo(Double value) {
            addCriterion("PLAN_AREA_SUMMARY <=", value, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryIn(List<Double> values) {
            addCriterion("PLAN_AREA_SUMMARY in", values, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryNotIn(List<Double> values) {
            addCriterion("PLAN_AREA_SUMMARY not in", values, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryBetween(Double value1, Double value2) {
            addCriterion("PLAN_AREA_SUMMARY between", value1, value2, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andPlanAreaSummaryNotBetween(Double value1, Double value2) {
            addCriterion("PLAN_AREA_SUMMARY not between", value1, value2, "planAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryIsNull() {
            addCriterion("DESIGN_AREA_SUMMARY is null");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryIsNotNull() {
            addCriterion("DESIGN_AREA_SUMMARY is not null");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryEqualTo(Double value) {
            addCriterion("DESIGN_AREA_SUMMARY =", value, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryNotEqualTo(Double value) {
            addCriterion("DESIGN_AREA_SUMMARY <>", value, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryGreaterThan(Double value) {
            addCriterion("DESIGN_AREA_SUMMARY >", value, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryGreaterThanOrEqualTo(Double value) {
            addCriterion("DESIGN_AREA_SUMMARY >=", value, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryLessThan(Double value) {
            addCriterion("DESIGN_AREA_SUMMARY <", value, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryLessThanOrEqualTo(Double value) {
            addCriterion("DESIGN_AREA_SUMMARY <=", value, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryIn(List<Double> values) {
            addCriterion("DESIGN_AREA_SUMMARY in", values, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryNotIn(List<Double> values) {
            addCriterion("DESIGN_AREA_SUMMARY not in", values, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryBetween(Double value1, Double value2) {
            addCriterion("DESIGN_AREA_SUMMARY between", value1, value2, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andDesignAreaSummaryNotBetween(Double value1, Double value2) {
            addCriterion("DESIGN_AREA_SUMMARY not between", value1, value2, "designAreaSummary");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("UPDATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("UPDATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("UPDATE_TIME =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("UPDATE_TIME <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("UPDATE_TIME >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("UPDATE_TIME <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("UPDATE_TIME <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("UPDATE_TIME in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("UPDATE_TIME not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("UPDATE_TIME not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("NOTE is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("NOTE is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("NOTE =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("NOTE <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("NOTE >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("NOTE >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("NOTE <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("NOTE <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("NOTE like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("NOTE not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("NOTE in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("NOTE not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("NOTE between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("NOTE not between", value1, value2, "note");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dept_summary
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dept_summary
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}